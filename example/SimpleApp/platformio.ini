; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
;default_envs = adafruit_feather_esp32_v2-app
;default_envs = adafruit_matrixportal_s3-app
;default_envs = az-delivery-devkit-v4-app
default_envs = esp32doit-devkit-v1-app
;default_envs = esp32-s3-devkitc-1-app
;default_envs = esp32-nodemcu-app
;default_envs = lilygo-ttgo-t-display-app
;default_envs = lilygo-t-display-s3-app
;default_envs = m5stack_core-app
;default_envs = ulanzi-tc001-app
;default_envs = wemos_lolin_s2_mini-app

[env]
platform = https://github.com/tasmota/platform-espressif32/releases/download/2025.03.30/platform-espressif32.zip
framework = arduino
board_build.app_partition_name = app
board_upload.offset_address = 0xE0000 ; app partition address in partitions for 4,8,16 MB
board_build.filesystem = littlefs
build_flags = 
    -D VERSION=\"1.0.0\"
    -D PIO_ENV=\"${PIOENV}\"
    -D LOG_LOCAL_LEVEL=ESP_LOG_DEBUG
extra_scripts =
    pre:../../script/add_factory_to_extra_images.py
monitor_speed = 115200
monitor_filters = esp32_exception_decoder
upload_protocol = esptool
custom_factory_name = factory ;Name of the binary file. Only specify if a binary is provided. Must be located in the project folder.
custom_factory_url = 
custom_factory_dir = /factory_binaries

[env:adafruit_feather_esp32_v2-app]
board = adafruit_feather_esp32_v2
board_build.partitions = ../../partition/8MB.csv
board_build.filesystem = littlefs

;[env:adafruit_matrixportal_s3-app]
;board = adafruit_matrixportal_esp32s3
;board_build.partitions = partition/8MB_tinyuf2.csv
;board_build.filesystem = littlefs

[env:az-delivery-devkit-v4-app]
board = az-delivery-devkit-v4
board_build.partitions = ../../partition/4MB.csv
board_build.filesystem = littlefs

[env:esp32doit-devkit-v1-app]
board = esp32doit-devkit-v1
board_build.partitions = ../../partition/4MB.csv
board_build.filesystem = littlefs

[env:esp32-s3-devkitc-1-n16r8v-app]
board = esp32-s3-devkitc-1
board_name = "ESP32-S3 DevKitC-1-N16R8V"
board_build.partitions = ../../partition/16MB.csv
board_build.filesystem = littlefs
board_upload.flash_size = 16MB
board_build.arduino.memory_type = qio_opi 

[env:esp32-nodemcu-app]
board = nodemcu-32s
board_build.partitions = ../../partition/4MB.csv
board_build.filesystem = littlefs

[env:lilygo-ttgo-t-display-app]
board = nodemcu-32s
board_name = "Lilygo(R) TTGO T-Display"
board_build.partitions = ../../partition/8MB.csv
board_build.filesystem = littlefs
board_upload.flash_size = "8MB"
board_upload.maximum_size = 8388608

[env:lilygo-t-display-s3-app]
board = lilygo-t-display-s3
board_build.partitions = ../../partition/16MB.csv
board_build.filesystem = littlefs

[env:m5stack_core-app]
board = m5stack-grey
board_build.partitions = ../../partition/16MB.csv
board_build.filesystem = littlefs

[env:ulanzi-tc001-app]
board = esp32dev
board_build.partitions = ../../partition/4MB.csv
board_build.filesystem = littlefs

[env:wemos_lolin_s2_mini-app]
board = lolin_s2_mini
board_build.partitions = ../../partition/4MB.csv
board_build.filesystem = littlefs
